{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring\\\\Personal-Projects\\\\React\\\\Meetup App\\\\src\\\\components\\\\layouts\\\\Layout.js\";\nimport MainNavigation from \"./MainNavigation\";\nimport styles from \"./Layout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Layout;\nexport default Layout; //{props.children} spits out all the jsx data that exists between wherever this Card component is being used,\n//this way we can use this component as a style wrapper and if we didn't use props.children, all the jsx content that\n//sat between this Card component would have just been erased and replaced with whatever jsx is in the component itself\n//Example:\n//<Card>\n//  <div> <---\n//      <h1>Data</h1> <---\n//  </div> <---\n//</Card>\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Spring/Personal-Projects/React/Meetup App/src/components/layouts/Layout.js"],"names":["MainNavigation","styles","Layout","props","main","children"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,sBAAO;AAAA,4BACH,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAM,MAAA,SAAS,EAAEF,MAAM,CAACG,IAAxB;AAAA,gBACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH;;KARQH,M;AAST,eAAeA,MAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import MainNavigation from \"./MainNavigation\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nfunction Layout(props) {\r\n    return <div>\r\n        <MainNavigation />\r\n        <main className={styles.main}>\r\n            {props.children}\r\n        </main>\r\n    </div>\r\n\r\n}\r\nexport default Layout;\r\n//{props.children} spits out all the jsx data that exists between wherever this Card component is being used,\r\n//this way we can use this component as a style wrapper and if we didn't use props.children, all the jsx content that\r\n//sat between this Card component would have just been erased and replaced with whatever jsx is in the component itself\r\n//Example:\r\n//<Card>\r\n//  <div> <---\r\n//      <h1>Data</h1> <---\r\n//  </div> <---\r\n//</Card>"]},"metadata":{},"sourceType":"module"}